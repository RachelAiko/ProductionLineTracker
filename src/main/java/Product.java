/*
 * AUTH: Rachel Matthews DATE: Fall 2020 PROJ: ProductionLineTracker FILE: Product.java
 *
 * Defines the Product object.
 */

/**
 * An abstract representation of a product, that implements the Item Interface.
 *
 * @author Rachel Matthews
 */
public abstract class Product implements Item {

  /**
   * A unique Id number of the product.
   */
  private int Id;

  /**
   * The item type of the product.
   */
  ItemType type;

  /**
   * The manufacturer name of the product.
   */
  private final String manufacturer;

  /**
   * The name of the product.
   */
  private String name;


  /**
   * Creates a new product.
   *
   * <p>
   * The Id is automatically set to 0.
   * </p>
   *
   * @param lastId       The last id number in the database.
   * @param name         The product name
   * @param manufacturer The manufacturer name
   * @param type         The item type
   */
  Product(int lastId, String name, String manufacturer, ItemType type) {
    this.Id = 0;
    this.name = name;
    this.manufacturer = manufacturer;
    this.type = type;
  }

  /**
   * Creates a new product with a known Id.
   *
   * <p>
   * The id number of a product is automatically generated by the database. Therefore, this
   * constructor should only be used when fetching data from the database.
   * </p>
   *
   * @param name         the product name
   * @param type         the item type
   * @param manufacturer the manufacturer name
   */
  public Product(String name, ItemType type, String manufacturer) {
    this.Id = Id;
    this.name = name;
    this.manufacturer = manufacturer;
    this.type = type;
  }

  /**
   * Gets a string that describes the product.
   *
   * @return A string that includes the products information.
   */
  public String toString() {
    return "Name: " + name + "\n" + "Manufacturer: " + manufacturer + "\n" + "Type: "
        + type.getCode();
  }

  public int getId() {
    return Id;
  }

  public void setId(int Id) {
    Id = Id;
  }

  /**
   * Gets the manufacturer name of the product.
   *
   * @return the manufacturer of the product.
   */
  public String getManufacturer() {
    return manufacturer;
  }

  public void setManufacturer(String manufacturer) {
    manufacturer = manufacturer;
  }

  /**
   * Gets the name of the product.
   *
   * @return the name of the product.
   */
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  /**
   * Gets the type of the product.
   *
   * @return the type of the product.
   */
  public ItemType getType() {
    return type;
  }

  public void setType(ItemType type) {
    this.type = type;
  }
}


